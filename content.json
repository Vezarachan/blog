{"meta":{"title":"Elaiza's Bookshop","subtitle":null,"description":null,"author":"Elaiza","url":"http://Vezarachan.github.io"},"pages":[{"title":"[404]","date":"2019-02-13T07:24:25.278Z","updated":"2019-02-13T07:24:25.278Z","comments":true,"path":"404.html","permalink":"http://Vezarachan.github.io/404.html","excerpt":"","text":""}],"posts":[{"title":"Hello World","slug":"hello-world","date":"2019-02-13T06:56:51.224Z","updated":"2019-02-13T06:56:51.224Z","comments":true,"path":"2019/02/13/hello-world/","link":"","permalink":"http://Vezarachan.github.io/2019/02/13/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"JSON Learning 1","slug":"JSON_Learing_1","date":"2018-05-13T16:00:00.000Z","updated":"2019-04-09T15:01:48.288Z","comments":true,"path":"2018/05/14/JSON_Learing_1/","link":"","permalink":"http://Vezarachan.github.io/2018/05/14/JSON_Learing_1/","excerpt":"##什么是JSON :rice: ####1.先给JSON下个定义 JSON(JavaScript Object Notation)——JavaScript对象表示法。 JSON是一种被多种系统用于交换数据的数据交换格式。 JSON独立于编程语言，和JavaScript有着一定的关系（来源于JavaScript的一个子集），它是基于JavaScript对象字面量表示法 JSON表达数据的方式对通用的编程概念很友好","text":"##什么是JSON :rice: ####1.先给JSON下个定义 JSON(JavaScript Object Notation)——JavaScript对象表示法。 JSON是一种被多种系统用于交换数据的数据交换格式。 JSON独立于编程语言，和JavaScript有着一定的关系（来源于JavaScript的一个子集），它是基于JavaScript对象字面量表示法 JSON表达数据的方式对通用的编程概念很友好 ####2.JSON的表示 JSON利用名称-值对（或者说是键值对）来描述一个具体的属性或者事物。 JSON利用双引号来将名称和值进行包裹，然后使用冒号分隔名称和值，如下图所示： 12\"animal\" : \"cat\"\"country\" : \"China\" 注：为了获得最大的可移植性，应该尽可能避免空格以及特殊字符。 但是，这还没有结束！ JSON的完整表示方法还需要花括号”{ … }”的帮助，用它来包裹整个对象，还可能会用到方括号”[ … ]”，用它来包裹数组，逗号”,”也很重要，用它来分隔对象中的名称-值对或者数组中的值。有如下示例： 123456789&#123; \"type\" : \"plankton\", \"color\" : \"green\", \"type\" : [ \"phytoplankton\", \"zooplankton\" ]&#125; 3.JSON的数据类型 对象 字符串 数字： 整型 浮点型 定点数 布尔值 null 数组 1.对象类型/*嵌套对象*/ 1234567891011121314&#123; \"person\" : &#123; \"name\" : \"Lindasy Bassett\", \"heightInInches\" : 66, \"head\" : &#123; \"hair\" : &#123; \"color\" : \"light blond\", \"length\" : \"short\", \"style\" : \"A-Line\" &#125;, \"eyes\" : \"green\" &#125; &#125;&#125; 2.字符串类型下列字符需要进行转义 需要转义的字符 名称 \\” 双引号 \\\\ 反斜线 \\/ 正斜线 \\b 退格符 \\f 换页符 \\t 制表符 \\n 换行符 \\r 回车符 \\u 后面跟十六进制字符 3.数字类型JSON中的数字可以是整数、小数、负数或者指数 123456&#123; \"INT\" : 225, \"DECIMAL\" : 22.555, \"NEGATIVE\" : -225.55, \"INDEX\" : 2.25e+25&#125; 4.布尔类型JSON中的布尔类型字面值仅仅允许小写形式——true or false 1234&#123; \"haveKey\" : true, \"haveDoor\" : false&#125; 5.null类型null是一个表示“没有值”的值，并且null必须小写 6.数组类型数组中可以容纳不同类型的数值，但是不建议这么做，即使它在JavaScript中可行，但是在其他编程语言中可能不适用。 12345678910111213141516171819&#123; \"test\" : [ &#123; \"question\" : \"2X + Y = 5 and X + Y = 3\", \"answer\" : &#123; \"X\" : 2, \"Y\" : 1 &#125; &#125;, &#123; \"question\" : \"The SKY is blue\", \"answer\" : true &#125;, &#123; \"question\" : \"a cat looks like a dog.\", \"answer\" : false &#125; ]&#125; 多维数组 12345678910111213141516171819202122&#123; \"tests\" : [ [ true, false, false, true ], [ false, true, false, false ], [ false, true, true, true ] ]&#125;","categories":[{"name":"JSON","slug":"JSON","permalink":"http://Vezarachan.github.io/categories/JSON/"}],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://Vezarachan.github.io/tags/学习笔记/"},{"name":"JSON","slug":"JSON","permalink":"http://Vezarachan.github.io/tags/JSON/"}]}]}