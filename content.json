{"meta":{"title":"Elaiza's Bookshop","subtitle":null,"description":null,"author":"Elaiza","url":"http://Vezarachan.github.io"},"pages":[{"title":"[404]","date":"2019-02-13T07:24:25.278Z","updated":"2019-02-13T07:24:25.278Z","comments":true,"path":"404.html","permalink":"http://Vezarachan.github.io/404.html","excerpt":"","text":""},{"title":"About me","date":"2020-01-22T12:35:30.363Z","updated":"2020-01-22T12:35:30.363Z","comments":true,"path":"about/index.html","permalink":"http://Vezarachan.github.io/about/index.html","excerpt":"","text":"一个热爱地理、书本、编程的GISer，目前正在探索新的世界的路途上。。。"}],"posts":[{"title":"外刊精读系列之Economist[1]","slug":"economist-series-1","date":"2020-01-29T07:49:00.000Z","updated":"2020-01-29T16:14:36.483Z","comments":true,"path":"2020/01/29/economist-series-1/","link":"","permalink":"http://Vezarachan.github.io/2020/01/29/economist-series-1/","excerpt":"第一次写有关经济学人精读的博客，此次精读的文章题为Inequality Illusion，属于整篇杂志的Leaders部分，即整本最为核心的社论（editorial）。","text":"第一次写有关经济学人精读的博客，此次精读的文章题为Inequality Illusion，属于整篇杂志的Leaders部分，即整本最为核心的社论（editorial）。 Gist Gulf in wealth and income between the rich and the poor could be lower than people expect. Plus, a large number of individuals have exaggerated its drawbacks, causing misconceptions among people. Strcuture ①para 1 Background - People today tend to hold that the inequality is on the upward curve. ②para 2-9 Core Idea &amp; its supporting evidences - 4 pillars of the idea above is being shaken. The top 1% of earners, actually, have barely become detached from the rest of the world. The household incomes &amp; wages have actually swollen rather than shrunk in the past decades. Labour share have not fallen in most countries. The notion that the inequalities of wealth have been soaring is hard to prove. ③para 10-13 Discussion &amp; Conclusion - A revolution in antitrust enforcementis urgently demanded for to reinviorate competition: both high-income earners and high-skilled immigration are expected to be loosen. Excerpts ①Even in a world of polarisation, fake news and social media, some beliefs remain universal, and central to today’s politics. ②None is more inﬂuential than the idea that inequality has risen in the rich world. ③People read about it in newspapers, hear about it from their politicians and feel it in their daily lives. ④This belief motivates populists, who say selﬁsh metropolitan elites have pulled the ladder of opportunity away from ordinary people. ⑤It has given succour to the left, who propose ever more radical ways to redistribute wealth. ⑥And it has caused alarm among business people, many of whom now claim to pursue a higher social purpose, lest they be seen to subscribe to a model of capitalism that everyone knows has failed. Analysis ①Even in a world of polarisation, fake news and social media, some beliefs remain universal, and central to today’s politics. 翻译：即使在一个充斥极端化、假新闻、社交媒体的世界，一些看法依然广泛流行，且对现在的政治很重要。 逻辑：该句直接给出现在世界的现状（极端化、假新闻、社交化）。 解析：前半句为状语，描述了整体环境（fake news和social media经常会用到，可以多看看，加强记忆）。后半句描述了这些看法的特点：1）广泛流行；2）对现今的政治很重要。 ②None is more inﬂuential than the idea that inequality has risen in the rich world. 翻译：在富裕国家中不平等的现象已经加剧这个看法最具有影响力。 逻辑：该句接上句，顺势表达这个看法（不平等现象已加剧）是最具有影响力的。 解析：首先，全句采用**否定(none)+比较级(more influential)=最高级(the idea is most influential)**的形式，引出了本文的主题——人们认为不平等的现象正在加剧。 例句：Nothing is more essential than cellphones transforming the way people communicate and live in a changing and complex world. ③People [read about it in newspapers], [hear about it from their politicians] and [feel it in their daily lives]. 翻译：人们在报纸中读到它，从他们的政治家口中听到它，在日常生活中感受到它。 逻辑：该句展现了这个想法影响之深远、传播之广泛。 ④This belief motivates populists, who say selﬁsh metropolitan elites have pulled the ladder of opportunity away from ordinary people. 翻译：这种看法激发了民粹主义者，他们说自私的都市精英已经夺走了平民百姓的上升渠道。 逻辑：该句阐述了这种想法所造成的影响（不良的）。 解析：populism意为民粹主义，近些年在各个国家，特别是在网络平台上比较泛滥的一种思想。-sm后缀可表示某某主义，例如individualism（个人主义）、collectivism（集体主义）、fundamentalism（原教旨主义）等等。metropolitan elite意为都市精英或者城市精英，metropolitan意为都市的，表达大城市的时候可以用metropolis或者megacity。elite意为精英，可以与其他词组合成为词组，如elite university（重点大学）。后半句中pull the ladder of opportunity away from …，表面意为“将机会的梯子从…拉走了“，之前学过类似的表达struggle to climb the social ladder，其实两者都表达了社会阶层流动的困难。 ⑤It has given succour to the left, who propose ever more radical ways to redistribute wealth. 翻译：它（这个想法）给左翼提供了援助，这些人请求用更加极端的方式来分配财富。 逻辑：这个句子和上面一句相承接，表示这种看法的影响。 ⑥And it has caused alarm among business people, many of whom now claim to pursue a higher social purpose, lest they be seen to subscribe to a model of capitalism that everyone knows has failed. 翻译：它（这个想法）已经造成了商人们的警觉，他们中的许多人现在声称去追求更高的社会目标，以免他们被看作是赞同一种所有人都认为失败了的资本主义模式。 逻辑：表示了这种看法对于商人们的影响，他们对此非常警觉。 解析：主句比较简短（不加赘述），后面的从句比较长（从many of whom开始均为从句），但不复杂，主要是表现了这些商人为了自保而做出了一些行动。后半句中比较重要的表达是subscribe to，它主要有两种意思（订阅/赞同），显然此处表达为订阅并不合适，因此应该是赞同的意思。 Summary 该段的整体逻辑已经很明朗了：①句引入背景，②提出本文主题即大众现在持有的看法，③句描述了这种看法的影响范围之广，④⑤⑥则简洁地阐述了这种看法对不同地人带来的影响。 Key points: 否定 + 比较级 = 最高级 pull the ladder of opportunity away from … struggle to climb the social ladder subscribe to 赞同h be volatile around a flat trend 表达（数据）上下波动 of deprivation 贫困的 impoverished/poor triumph over 战胜 call for 要求 demand/require starve sb of sth 使某人得不到某种东西 deprive sb of sth/strip sb of sth","categories":[{"name":"Reading","slug":"Reading","permalink":"http://Vezarachan.github.io/categories/Reading/"}],"tags":[{"name":"经济学人","slug":"经济学人","permalink":"http://Vezarachan.github.io/tags/经济学人/"},{"name":"外刊","slug":"外刊","permalink":"http://Vezarachan.github.io/tags/外刊/"}]},{"title":"学习pandas系列 -1-","slug":"pandas-series-1-","date":"2020-01-22T13:25:43.000Z","updated":"2020-01-24T16:08:38.477Z","comments":true,"path":"2020/01/22/pandas-series-1-/","link":"","permalink":"http://Vezarachan.github.io/2020/01/22/pandas-series-1-/","excerpt":"Pandas是什么","text":"Pandas是什么 pandas为python提供了高性能、易于使用的数据结构与数据分析工具，其能够在读写不同的数据结构（包含csv、dat、excel等文本数据格式以及hdf5等二进制格式），还能够完成时间序列分析。 Pandas的基本数据结构 Series Series支持大部分numpy所支持的操作（本质上是对numpy数据类型的拓展），其类似于多维数组或是字典。 DataFrame DataFrame为多种数据类型列构成的二维标签数据类型，与excel和数据库表类似。 开始上手pandas 1. 示例数据 此处练习采用的数据： openflight的机场数据airports.dat，其总共包含了7697条数据。 一个是英国的人口随时间变化的数据，年份从2000年至2018年。 2. 读取数据 pandas提供了读取不同类型数据的函数read_XXX(args…)，能够读取不同的数据格式。 12airports = pd.read_csv(r\"path\\to\\data\\airports.dat\", header=None)airports.info() # 查看数据信息 可以看到返回了读取的数据的信息如下： 12345678910111213141516&lt;class &apos;pandas.core.frame.DataFrame&apos;&gt;RangeIndex: 7698 entries, 0 to 7697Data columns (total 14 columns):0 7698 non-null int641 7698 non-null object2 7649 non-null object3 7698 non-null object4 7698 non-null object5 7698 non-null object6 7698 non-null float647 7698 non-null float648 7698 non-null int649 7698 non-null object10 7698 non-null objectdtypes: float64(2), int64(2), object(10)memory usage: 842.1+ KB 该数据没有表头，总共有7698行10列数据，数据类型有float、int和object。由于数据量较大，因此我们可以使用head()或者tail()函数查看前几条数据抑或是后几条数据。 1airports.head(10) # 或是airports.tail(10) 获取数据基本信息 1. 这些机场属于多少个国家？ 12airports.country.unique().size# =&gt; 237 2. 哪个国家拥有的机场最多？ 12345678910111213141516# 首先按照country分组max_airports_num = airports.groupby(\"country\")# 然后进行聚合操作max_airports_num[\"airport_id\"].agg(np.size).sort_values(ascending=False)[0:10]# =&gt;# United States 1512# Canada 430# Australia 334# Brazil 264# Russia 264# Germany 249# China 241# France 217# United Kingdom 167# India 148# Name: airport_id, dtype: int64 我们可以进行可视化 1234567%matplotlib inlineplt.style.use(\"seaborn-dark\")plt.bar(data=max_airports_countries, x=max_airports_countries.index, height=max_airports_countries.values, facecolor = 'lightskyblue')plt.xticks(rotation=45)plt.xlabel(\"Country\")plt.ylabel(\"Airport Number\")plt.title(\"Those countries owns most airports\") 3. 哪些国家的平均海拔最低？ 1234567891011121314min_alt_agg = airports.groupby(\"country\")min_alt_agg[\"altitude\"].agg(np.mean).sort_values(ascending=True)[0:10]# =&gt;# Kiribati 4.611111# Cayman Islands 6.333333# Johnston Atoll 7.000000# Maldives 8.090909# Tuvalu 9.000000# British Indian Ocean Territory 9.000000# Turks and Caicos Islands 9.333333# Seychelles 9.500000# Marshall Islands 9.875000# Cocos (Keeling) Islands 10.000000# Name: altitude, dtype: float64 详细代码点击此处可获取。","categories":[{"name":"数据分析","slug":"数据分析","permalink":"http://Vezarachan.github.io/categories/数据分析/"}],"tags":[{"name":"pandas","slug":"pandas","permalink":"http://Vezarachan.github.io/tags/pandas/"},{"name":"python","slug":"python","permalink":"http://Vezarachan.github.io/tags/python/"},{"name":"数据分析","slug":"数据分析","permalink":"http://Vezarachan.github.io/tags/数据分析/"}]},{"title":"Learning GDAL -1-","slug":"GDAL学习笔记1","date":"2019-04-13T16:00:00.000Z","updated":"2020-01-22T13:30:08.803Z","comments":true,"path":"2019/04/14/GDAL学习笔记1/","link":"","permalink":"http://Vezarachan.github.io/2019/04/14/GDAL学习笔记1/","excerpt":"Learning GDAL 初识GDAL GDAL是由C++编写的具有X/MIT许可证的开源空间数据操作库，其主要由两部分组成，如下所示： GDAL(Geospatial Data Abstraction Library，地理空间数据抽象库，用于操作栅格数据) ORG(OGR Simple Feature Library，简单要素库，用于操作矢量数据)","text":"Learning GDAL 初识GDAL GDAL是由C++编写的具有X/MIT许可证的开源空间数据操作库，其主要由两部分组成，如下所示： GDAL(Geospatial Data Abstraction Library，地理空间数据抽象库，用于操作栅格数据) ORG(OGR Simple Feature Library，简单要素库，用于操作矢量数据) GDAL支持的数据格式 栅格数据格式（155） 矢量数据格式（95） GDAL源码文件夹结构 alg：GDAL库中提供的一些算法的源代码（这些算法包括但不限于：DEM生成等高线算法、图像纠正算法（几何纠正、TPS纠正、RPC纠正等），栅格矢量化算法、矢量栅格化算法、格网计算算法、PCT和RGB互转算法、分类图的小碎斑块去除算法等） apps：GDAL库中提供的一些命令行工具集的源代码 bridge：用来连接GDAL抽象类的定义和GDAL自己的结构体定义及其实现的源代码 ci：构建测试文件 data：GDAL库中需要用到的一些“配置文件”，主要有ESRI的投影文件、ESPG的投影文件、PCI的投影和椭球体文件、AutoCAD的DXF格式的头文件等 doc：用来生成GDAL帮助文档的一些dox文件 frmts：针对不同的特定图像格式解析的源代码 gcore：GDAL抽象类的数据集，图像、波段的读写接口都是在此实现 gnm： html：GDAL生成的帮助文档，使用doxygen工具生成的GDAL帮助文档会出现在这个文件夹中 m4：m4为后缀名的文件。m4文件叫Macro Processor Library，是便宜基础中最核心的文件，这个文件主要是用autoconf来产生configure配置文件，继而自动生成Makefile文件（Windows平台无用） man：用来生成Linux或者其他平台下的帮助文件（Windows平台无用） ogr：OGR库源代码 port：CPL库的文件，CPL是一个GDAL的底层支持库，CPL库中定义了一些字符串的操作、文件处理、网页请求、数据库连接、哈希表、字符加密文化压缩等基础的函数。 scripts： swig：SWIG(Simplified Wrapper and InterfaceGenerator)的作用就是可以将C/C++写的库封装为Python、Java、C#、Perl和Ruby等其他语言的访问接口 vb6：将GDAL编译成一个VB6的模块 (2.2.3以后版本已无）wince：用来编译Windows CE平台下的GDAL库","categories":[{"name":"GIS","slug":"GIS","permalink":"http://Vezarachan.github.io/categories/GIS/"}],"tags":[{"name":"GDAL","slug":"GDAL","permalink":"http://Vezarachan.github.io/tags/GDAL/"},{"name":"GIS","slug":"GIS","permalink":"http://Vezarachan.github.io/tags/GIS/"}]},{"title":"GeoCafe-wiki GIS知识整理","slug":"GeoCafe-wiki","date":"2019-04-10T16:00:00.000Z","updated":"2019-06-01T13:41:15.687Z","comments":true,"path":"2019/04/11/GeoCafe-wiki/","link":"","permalink":"http://Vezarachan.github.io/2019/04/11/GeoCafe-wiki/","excerpt":"GeoCafe-wiki A​ AJAX Asynchronou s JavaScript and XML，异步 JavaScript 和 XML ，是指一种创建交互式网页应用的网页开发技术。 通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。","text":"GeoCafe-wiki A​ AJAX Asynchronou s JavaScript and XML，异步 JavaScript 和 XML ，是指一种创建交互式网页应用的网页开发技术。 通过在后台与服务器进行少量数据交换，Ajax 可以使网页实现异步更新。这意味着可以在不重新加载整个网页的情况下，对网页的某部分进行更新。 AngularJS AngularJS是一个开发动态Web应用的框架。它让你可以使用HTML作为模板语言并且可以通过扩展的HTML语法来使应用组件更加清晰和简洁。它的创新之处在于，通过数据绑定和依赖注入减少了大量代码，而这些都在浏览器端通过JavaScript实现，能够和任何服务器端技术完美结合。 Angular是为了扩展HTML在构建应用时本应具备的能力而设计的。对于静态文档，HTML是一门很好的声明式的语言，但对于构建动态WEB应用，它无能为力。所以，构建动态WEB应用往往需要一些技巧才能让浏览器配合我们的工作。 Apache Apache软件基金会（也就是Apache Software Foundation，简称为ASF）是专门为运作一个开源软件项目的Apache 的团体提供支持的非盈利性组织，这个开源软件的项目就是 Apache 项目。著名的Shiro，Kylin，Hadoop、Spark都是Apache的开源项目。 ArcGIS ESRI开发的一款功能强大的GIS软件，目前已更新至ArcGIS Pro2.1和ArcGIS10.6。ArcGIS10.x具有三个组件——ArcMap，ArcCatalog以及ArcScene。 ArcGIS Pro ArcGIS Pro 是 Esri 新一代 64 位桌面 GIS 产品。 在技术上领先于市场上所有其他产品，ArcGIS Pro 在直观的用户界面中提供专业的 2D 和 3D 制图。 可以认为 ArcGIS Pro 是前进的一大步，这一产品推进了可视化、分析、影像处理、数据管理和集成。 ArcMap ArcGIS组件中最重要的一部分，可以进行数据分析、地图制作等，一般和ArcCatalog一起使用，与ArcToolbox组成了ArcGIS的三驾马车。 ArcCatalog ArcGIS组件中的一部分，用于管理数据等功能。 ArcToolbox 内含于ArcMap，其中包含数量众多的与数据管理、数据分析、矢量操作、栅格操作、地图制图等工具。 Arcpy Arcpy时一种python站点包，用于执行ArcGIS中的各种函数和功能。 B BSON (Binary Serialized Document Format)是一种二进制形式的存储格式，采用了类似于 C 语言结构体的名称、对表示方法，支持内嵌的文档对象和数组对象，具有轻量性、可遍历性、高效性的特点，可以有效描述非结构化数据和结构化数据。 MongoDB使用了BSON这种结构来存储数据和网络数据交换。把这种格式转化成一文档这个概念(Document)，因为BSON是schema-free的，所以在MongoDB中所对应的文档也有这个特征，这里的一个Document也可以理解成关系数据库中的一条记录(Record)，只是这里的Document的变化更丰富一些，如Document可以嵌套。 MongoDB以BSON做为其存储结构的一种重要原因是其可遍历性。 C CAD数据模型 最早的计算机制图系统，使用阴极射线管的显示线绘制矢量地图、使用行式打印机上的加印技术绘制栅格地图。以此为起源，十九世纪六十到七十年代出现了精致的绘图硬件工具以及能够使用合理逼真制图技术将地图符号化的制图软件。 这一时代，地图通常用一般的 CAD（计算机辅助制图）软件来制作。CAD 数据模型以表示点、线、面的二进制文件格式存储地理数据。但是这些文件中，不能存储足够多的属性信息。地图图层和注记标注是基本的属性描述。 CDN (Content Delivery Network)内容分发网络。其基本思路是尽可能避开互联网上有可能影响数据传输速度和稳定性的瓶颈和环节，使内容传输的更快、更稳定。 Coverage数据模型 1981 年，ESRI（Environmental System Research Institute，Inc.）推出了它的第一个商用GIS 软件，ArcInfo，它实现了第二代地理数据模型——coverage 数据模型（也称地理关系数据模型）。这个模型有两个关键之处： 空间数据与属性数据相结合。空间数据存储在二进制索引文件中，使得显示和访问最优化。属性数据存储在表格中，用等于二进制文件中要素数目的行来存储，并且属性和要素使用同一ID 连接。 矢量要素之间的拓扑关系也被存储。这意味着，线的空间数据记录包含这些信息： 哪些结点分割线、可以推算有哪些线相连，同时还包含线的右侧及左侧有哪些多边 形的信息。 Coverage 数据模型的优势是用户可以自定义要素表格；不仅可以添加字段并且还可以 建立与外部数据表格的关联。因为计算机硬件和数据库软件的性能局限，当时把空间数据直接存储在关系数据库是不可能的。所以，coverage 数据模型将二进制文件中的空间数据与表格中的属性数据连接起来。尽管将空间数据和属性数据分开存储，coverage 数据模型依然在GIS 领域占统治地位。其原因在于：coverage 数据模型使追求高性能的GIS 成为可能，储拓扑关系的存储使得高级的地理分析操作和更精确的数据输入得以实现。 Coverage 数据模型有个重大缺陷——要素是以统一的行为聚集的点、线和面的集合。也就是说，表示道路的线的行为和表示溪流的线的行为是一模一样的。 CSW (Catalogue Service for the Web)网络地理数据编录服务，该接口标准规定了一套用于发布和发现地理信息数据集元数据和服务的服务开发规范。数据提供者使用空间位置和主题区分不同的数据集，使得客户端可以有效地获取所需数据。 D DNS (Domain Name System)根据域名查出IP地址，许多公司都有提供DNS服务器，对域名进行解析。万维网上作为域名和IP地址相互映射的一个分布式数据库，能够使用户更方便的访问互联网，而不用去记住能够被机器直接读取的IP数串。 E ESRI (Environmental System Research Institute, Inc.)美国环境系统研究所公司成立于1969年，总部设在美国加利福利亚州雷德兰兹市，是世界最大的地理信息系统技术提供商。在全美各地都设有办事处，世界各主要国家均设有分公司或者代理，全球员工总数超过4000名。其商业合作伙伴计划，在全球有超过2000个领域开发商、咨询服务商、增值代理以及数据提供商，与分布在80个国家的国际代理一起，构成了ESRI公司强大的技术支持与服务网络。 F FE (Filter Encoding)，定义了表达空间信息查询范围的 XML 语法，是查询可以根据一定的属性筛选结果。 Feature 要素类，在地图上，要素类是离散对象。“小”对象（small objects）表示为点要素；“长”对象表示为线要素；“大”对象表示为多边形要素。 G Gauss-Kruger Projection 高斯-克吕格投影是一种横轴等角切椭圆柱投影。它是假设一个椭圆柱面与地球椭球体面横切于某一条经线上，按照等角条件将中央经线东、西各3°或1.5°经线范围内的经纬线投影到椭圆柱面上，然后将椭圆柱面展开成平面（图2-37）即成。该投影是19世纪20年代由德国数学家、天文学家、物理学家高斯（Friedrich Gauss）最先设计，后经德国大地测量学家克吕格（Jihannes Vlriiger）补充完善，故名高斯-克吕格投影。 GDAL (Geospatial Data Abstraction Libarary) 地理空间数据抽象库，一个在X/MIT许可协议下读写空间数据（包括栅格数据和矢量数据）的开源库，它利用抽象数据模型来表达所支持的各种文件格式，还使用一系列命令行工具来进行数据转换和处理。 Geocentric coordinate system 地心坐标系，简写为GEOCCS。包括以地球质心为原点建立的空间直角坐标系，或以地球质心作为球心的地球椭球面为基准面所建立的大地坐标系。 Geodatabase 数据模型 ArcInfo 8 引入了一种新的面向对象的数据模型——Geodatabase 数据模型。Geodatabase 数据模型中，数据的物理模型与逻辑模型的概念联系更加紧密。Geodatabase中的数据对象大多都是用户在逻辑数据模型中定义的对象，如业主、建筑物、宗地和道路等等。 Geodetic Coordinate 大地坐标，也即地理坐标。大地测量中以参考椭球面(将地球看成椭球体，这个椭球体的表面即为参考椭球面)为基准面的坐标。地面点P的位置用大地经度L、大地纬度B和大地高H表示。当点在参考椭球面上时，仅用大地经度和大地纬度表示。 Geodjango django的地理数据拓展，支持开发Web GIS，缺点是文档过少。 Geographic coordinate system 地理坐标系统，简写为GEOGCS GeoJSON 一种对各种地理数据结构进行编码的格式，基于Javascript对象表示法的地理空间信息数据交换格式。GeoJSON对象可以表示几何、特征或者特征集合。GeoJSON支持下面几何类型：点、线、面、多点、多线、多面和几何集合。GeoJSON里的特征包含一个几何对象和其他属性，特征集合表示一系列特征。 Geometric network 几何网络，几何网络用于存储参与线性拓扑功能的一系列线要素，体线增强型的线性拓扑功能。几何网络适用于使用跟踪（trace）分析的系统，如电力网络、河流网络、道路交通网络。 GeoMoose GeoMOOSE 是一套基于网页的分布式地图数据显示框架。它适用于管理国家、城市（GeoMOOSE 起源于市政管理的需求）等不同范围的空间和非空间信息。它对 MapServer 和 OpenLayers 的功能进行了扩展，提供了如多图层条件下基于下拉菜单的对象选取、浏览和组织，多对象选取，数据库查询等新功能。 GeoMOOSE 运行高效，能够适应上百个图层和数据源同时运作的复杂环境。每个图层具有独立的设定用于数据源、发布、符号显示、模板套用等，使得不同的管理人员得以使用不同的工具，依照各自的进度要求对不同的数据进行管理。 该框架的用户界面易于调整。高度模块化的架构设计使得新功能的加入易于实现。 GeoNetwork GeoNetwork OpenSource 是一个编目应用系统，用于管理空间信息资源。它提供了强有力的元数据编辑和检索功能、内置交互式网页地图查看组件，全部基于开放标准。 GEOS (Geometry Engine - Open Source)空间信息处理函数库，是 JTS 拓扑学工具箱的 C++ 接口。它具备了 OpenGIS 标准的空间对象操作能力及 JTS 所提供的增强的拓扑运算功能。 GEOS 是目前应用最为广泛的 C++ 地理空间集合函数库。它被用于 PostGIS、QGIS 、GDAL/OGR、MapServer等开源软件以及 FME等私有软件。 GeoServer GeoServer 是 OpenGIS Web 服务器规范的 J2EE 实现，利用 GeoServer可以方便的发布地图数据，允许用户对特征数据进行更新、删除、插入操作，通过 GeoServer可以比较容易的在用户之间迅速共享空间地理信息。GeoServer是社区开源项目，可以直接通过社区网站下载，详细请查看本文档末的资源表。 GeoTIFF TIFF (Tag Image File Format) 图像文件是图形图像处理中常用的格式之一, 其图像格式很复杂, 但由于它对图像信息的存放灵活多变, 可以支持很多色彩系统, 而且独立于操作系统, 因此得到了广泛应用。 在各种地理信息系统、摄影测量与遥感等应用中, 要求图像具有地理编码信息, 例如图像所在的坐标系、比例尺、图像上点的坐标、经纬度、长度单位及角度单位等等。对于存储和读取这些信息, 纯TIFF 格式的图像文件是很难做到的, 而GeoTIFF 作为TIFF 的一种扩展, 在TIFF 的基础上定义了一些GeoTag (地理标签) , 来对各种坐标系统、椭球基准、投影信息等进行定义和存储, 使图像数据和地理数据存储在同一图像文件中, 这样就为广大用户制作和使用带有地理信息的图像提供了方便的途径。 GeoTools GeoTools 是英国利兹大学(University of Leeds)的James Macgll 从1996 年开始研发的一个操作和显示地图的开源Java 代码库，提供了一系列符合规范的操作地理空间数据的方法，例如可以用它来实现一个地理信息系统（GIS）。GeoTools库在开发时执行OGC规范。 GIS (Geographic Information System，地理信息系统)，随着时代的发展，字母的含义也在逐渐发生着变化，G可以代表Geospatial(地理空间)或是Global，S可以表示Science或者是Service，现在GIS有了与众不同的含义。 GML (Geography Markup Language)地理注记，一种 XML 语法，用于表述地理要素。它既是 GIS 系统的数据类型，也是网络中公开交换地理信息的媒介。它不仅包含了传统的矢量信息，也包含了观测信息的某些成分，具有很高的通用性。 GMT (Generic Mapping Tools)通用制图工具，用于处理二维及三维的空间信息，进行过滤、拟合、格网化、投影等操作，并将成果存储为 Encapsulated PostScript 格式文件。无论是简单的二维投点图，等高线图或 3D 场景渲染，无论黑白二值、灰度、影线或真彩，GMT 均可胜任。GMT 支持众多主流的地图投影系统，并能够进行线性或指、对数变换。 GMT 中包含了海岸线、河流、政治界限等数据，用于支持常见的制图业务。 GraphQL GraphQL 既是一种用于 API 的查询语言也是一个满足你数据查询的运行时。 GraphQL 对你的 API 中的数据提供了一套易于理解的完整描述，使得客户端能够准确地获得它需要的数据，而且没有任何冗余，也让 API 更容易地随着时间推移而演进，还能用于构建强大的开发者工具。 请求你所要的数据 不多不少 向你的 API 发出一个 GraphQL 请求就能准确获得你想要的数据，不多不少 GraphQL 查询总是返回可预测的结果。使用 GraphQL 的应用可以工作得又快又稳，因为控制数据的是应用，而不是服务器。 获取多个资源只用一个请求 GraphQL 查询不仅能够获得资源的属性，还能沿着资源间引用进一步查询。典型的 REST API 请求多个资源时得载入多个 URL，而 GraphQL 可以通过一次请求就获取你应用所需的所有数据。这样一来，即使是比较慢的移动网络连接下，使用 GraphQL 的应用也能表现得足够迅速。 描述所有的可能类型系统 GraphQL API 基于类型和字段的方式进行组织，而非入口端点。你可以通过一个单一入口端点得到你所有的数据能力。GraphQL 使用类型来保证应用只请求可能的数据，还提供了清晰的辅助性错误信息。应用可以使用类型，而避免编写手动解析代码。 快步前进强大的开发者工具 不用离开编辑器就能准确知道你可以从 API 中请求的数据，发送查询之前就能高亮潜在问题，高级代码智能提示。利用 API 的类型系统，GraphQL 让你可以更简单地构建如同GraphiQL的强大工具。 API 演进无需划分版本 给你的 GraphQL API 添加字段和类型而无需影响现有查询。老旧的字段可以废弃，从工具中隐藏。通过使用单一演进版本，GraphQL API 使得应用始终能够使用新的特性，并鼓励使用更加简洁、更好维护的服务端代码。 使用你现有的数据和代码 GraphQL 让你的整个应用共享一套 API，而不用被限制于特定存储引擎。GraphQL 引擎已经有多种语言实现，通过 GraphQL API 能够更好利用你的现有数据和代码。你只需要为类型系统的字段编写函数，GraphQL 就能通过优化并发的方式来调用它们。 GRASS GIS (Geographic Resources Analysis Support System，地理资源分析支持系统)，一种用于地理数据管理和分析、图像处理、图形/地图产品、空间模型和可视化的免费地理信息系统，是OSGeo下的一个正式项目。 H HMM Hiden Markov Model，隐马尔可夫模型，是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。其难点是从可观察的参数中确定该过程的隐含参数。然后利用这些参数来作进一步的分析，例如模式识别。 I InSAR (Interferometric Synthetic Aperture Radar)干涉雷达指采用干涉测量技术的合成孔径雷达（InSAR），是新近发展起来的空间对地观测技术，是传统的SAR遥感技术与射电天文干涉技术相结合的产物。它利用雷达向目标区域发射微波，然后接收目标反射的回波，得到同一目标区域成像的SAR复图像对，若复图像对之间存在相干条件，SAR复图像对共轭相乘可以得到干涉图，根据干涉图的相位值，得出两次成像中微波的路程差，从而计算出目标地区的地形、地貌以及表面的微小变化，可用于数字高程模型建立、地壳形变探测等。 image 在Geodatabase 使用现有的栅格技术表现连续的影像数据。影像可用于作为地图的背景底图。 J JSON (JavaScript Object Notation)JavaScript 对象表示法，是存储和交换文本信息的语法，类似 XML， 比 XML 更小、更快，更易解析。 JTS (JTS Topology Suite)拓扑运算函数库。 JTS 是一套用于处理几何要素拓扑关系的函数库。它提供了完整、稳定、可靠的基本二位平面线形图形运算算法实现。 JTS 包含了”JTS Test Builder“ 用于通过交互界面测试各种功能。大量的测试保证了 JTS 的可靠性。 JTS 被大量 Java 开源地理信息软件使用，并有 GEOS 这一 C++ 移植版用于大量 C++ 软件。另有 C# 和 JavaScript 移植 JSTS K KML (KML Encoding Standard)地理注记，一种用于地理信息可视化的 XML 语法。它用于注记地图和影像。这一格式可用于标注地理要素并指导用于的导航操作。 L Lambert projection 兰勃特投影是由德国数学家兰勃特（J.H.Lambert）拟定的正形圆锥投影。有两种：①等角圆锥投影。设想用一个正圆锥切于或割于球面，应用等角条件将地球面投影到圆锥面上，然后沿一母线展开成平面。投影后纬线为同心圆圆弧，经线为同心圆半径。没有角度变形，经线长度比和纬线长度比相等。适于制作沿纬线分布的中纬度地区中、小比例尺地图。国际上用此投影编制1∶100万地形图和航空图；②等积方位投影。设想球面与平面切于一点，按等积条件将经纬线投影于平面而成。 LANDSAT 美国NASA的陆地卫星(Landsat)计划(1975年前称为地球资源技术卫星 — ERTS )，从1972年7月23日以来， 已发射8颗（第6颗发射失败）。目前Landsat1—4均相继失效，Landsat 5于2013年6月退役。 Landsat 7于1999年4月15日发射升空。Landsat8 于2013年2月11日发射升空，经过100天测试运行后开始获取影像。 LibLAS LibLAS 是一套用于处理常见的 “LAS” LiDAR格式数据的 C/C++ 函数库。 其 ASPRS LAS 格式是一种 LiDAR 数据点云的序列二进制编码，可用于 LiDAR 传感器数据的存储和相应软件的交换、存档与处理。 LiDAR（Light Detection and Ranging 光信号测距技术）是一种高精度的测距方法。其采用类似无线电雷达的原理，但采用激光信号实现。LiDAR 产生一种称为“点云”的产品，其中各个点代表反射信号源到传感器的距离。ASPRS LAS 是其产品的常见存储格式。 Location 位址，Geodatabase 中使用地址、XY 坐标定位、邮政编码、地区名称以及Route 等工具来体现Location（位址）。 M Mapnik Mapnik 是一个渲染精美地图的工具包，其清晰的匀称柔性图形边缘的实现依赖于高质量的抗锯齿形图形、智能标签定位，和可扩展的SVG标记。众所周知，mapnik常用于渲染 Open Street Map 的主要地图图层。 Mapnik 通常被嵌入在 Python 应用程序中，用于在网络上发布地图。最近 Mapnik 被扩展，也用来绘制高分辨率的纸质地图。 Mapnik的地理对象集合（地图、图层、数据源、特征、地理几何）和系统库不依赖于 GUI 窗口模型系统，可以部署在任何服务环境下。它可以在多线程环境下很好的运行，起始目标面向 Web 应用开发，但不限于此。 高层次的Python绑定（boost.python库）支持快速应用程序开发，支持zope3和django等。 Mapnik 是一个跨平台应用程序。大多数 linux 具有软件代码包，而Mac OS X 和 MS Windows 常采用安装程序。 MapServer MapServer是用C语言编写的一个开源地理空间数据谊染引擎，起源于20世纪90年代中期美国明尼苏达大学(University of Minnesota)、NASA 及明尼苏达州自然资源部(Minnesota Department of Natural Resources,MNDNR) 的一个合作项目一ForNet,这是一个基于麻省理工学院模式的许可证(MIT-style License)发布的开源软件,用于在Web上发布空间数据和交互式地图应用,可支持所有主流的操作系统,包括Windows.Linux.Mac OS X 等。它的定位不是实现全功能的GIS,而是提供满足Web 应用的大多数核心GIS功能。 MariaDB MariaDB数据库管理系统是MySQL的一个分支，主要由开源社区在维护，采用GPL授权许可MariaDB的目的是完全兼容MySQL，包括API和命令行，使之能轻松成为MySQL的代替品。在存储引擎方面，使用XtraDB（英语：XtraDB）来代替MySQL的InnoDB。 MariaDB由MySQL的创始人Michael Widenius（英语：Michael Widenius）主导开发，他早前曾以10亿美元的价格，将自己创建的公司MySQL AB卖给了SUN，此后，随着SUN被甲骨文收购，MySQL的所有权也落入Oracle的手中。MariaDB名称来自Michael Widenius的女儿Maria的名字。 MongoDB MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。 MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引。 MXNET 一个深度学习框架，支持CPU和GPU计算平台。 MySQL MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，目前属于 Oracle旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件。 MySQL轻量化，性能好，扩展性好，可以进行深度定制。在MySQL8.0版本中增加了对JSON的支持，使得其功能更加强大。 N Neo4j Neo4j是一个高性能的,NOSQL图形数据库，它将结构化数据存储在网络上而不是表中。它是一个嵌入式的、基于磁盘的、具备完全的事务特性的Java持久化引擎，但是它将结构化数据存储在网络(从数学角度叫做图)上而不是表中。Neo4j也可以被看作是一个高性能的图引擎，该引擎具有成熟数据库的所有特性。程序员工作在一个面向对象的、灵活的网络结构下而不是严格、静态的表中——但是他们可以享受到具备完全的事务特性、企业级的数据库的所有好处。 Neo4j具有spatial空间拓展，可以很好地支持空间数据的操作，但是目前中文文档较少。 O OGC (Open Geospatial Consortium)开放地理空间信息联盟，成立于 1994年，其认为是将地理空间信息融入的到世界信息服务的框架之中。OGC成员包括技术开发者和用户。他们在全球范围内合作建立地理信息技术的开放标准和最佳实践，为地理信息交换的便捷提供技术支持。这些技术从人造地球观测卫星复杂的运行设计和控制到简单的地理坐标编码和地图图像显示。 OGR (OGR Simple Feature Library，简单要素库)，GDAL项目的一个分支，功能与GDAL类似，只是它提供对矢量数据的额读写支持，同时它实现了一个对空间参考信息进行处理的类，用来对空间数据的空间信息进行处理。 OpenLayers OpenLayers使得WEB开发人员容易地在任何WEB页面中嵌入多种来源的动态地图。 OpenLayers提供类似Google Mapserver API的丰富的制图工具箱和插件集合。所有工具和插件都运行于浏览器内部，这使得OpenLayers易于安装，不依赖于任何服务器端额外支撑。 Open Street Map工具组 Open Street Map 计划旨在为任何有相应需要的人提供公共的街道地图等地理数据。在 OSM 计划之前，众多人们认为开放的地图服务实际存在这各种法律或技术上问题，而 OSM 则不会限制用于利用其数据进行富有创造性的开发利用工作。 OSGeo (Open Source Geospatial Foundation),一个全球性非营利性组织，目标是支持全球性的合作,建立和推广高品质的空间信息开源软件。 OSSIM (Open Source Software Image Map)，一套高性能引擎，用于遥感、图像处理、地理信息系统和摄影测量信息。 OSSIM 项目从 1996 年开始开发。它由美国政府资助，并在其研究和事务机构使用。 整套体统由一系列的高性能软件组成，使用 C++ 编写，体现了现代的面向对象编程理念。系统中可以集成众多的工具、图形界面环境等，其中一些直接包含在 OSSIM 的发行版中。 OTB (ORFEO Toolbox Library)是一套高性能的影象处理函数库。其主要用途为处理雷达影象及卫星或航空光学影象。OTB 为未来的光学及雷达影象处理提供了一整套工具，包括三维建模、影象分割、分类、变化探测、纹理识别与匹配、光学与雷达信息综合等。 OTB 由法国宇航局赞助，从 2006 开始一直进行着活跃的开发。它是以 ITK 医学影响分析系统为基础的开源软件。 P PostGIS PostGIS使得深受欢迎的PostgreSQL对象关系型数据库能够支持空间数据的管理与处理，使其成为GIS和WEB制图应用系统的后台数据库，就像Oracle Spatial在Oracle数据库中的作用一样。 PostGIS性能稳定、快速、兼容各标准规范，具有数百个空间函数，成为当今最为广泛使用的开源空间数据库。PostGIS被用于各种各样的世界组织，包括规避风险的政府部门和组织，每日要存储TB级数据、服务数百万次WEB请求。 数据库管理可通过pgAdmin、phpPgAdmin及其他工具，实现桌面和WEB管理方式。数据导入或导出可通过命令行工具（shp2pgsql, pgsql2shp, ogr2ogr, dxf2postgis）实现，也可通过桌面GIS或WEB GIS客户端实现。这些客户端也能以地图方式显示和管理PostGIS空间数据库表。 PostgreSQL PostgreSQL是以加州大学伯克利分校计算机系开发的 POSTGRES，现在已经更名为PostgreSQL，版本 4.2为基础的对象关系型数据库管理系统（ORDBMS）。PostgreSQL支持大部分 SQL标准并且提供了许多其他现代特性：复杂查询、外键、触发器、视图、事务完整性、MVCC。同样，PostgreSQL 可以用许多方法扩展，比如， 通过增加新的数据类型、函数、操作符、聚集函数、索引。免费使用、修改、和分发 PostgreSQL，不管是私用、商用、还是学术研究使用。该数据库为目前最为强大的开源数据库。 pgRouting pgRouting扩展了地理空间数据库 PostGIS/PostgreSQL，提供了地理空间路径规划功能。数据库路径规划的优点如下: 许多客户端应用程序例如 Quantum GIS 和 uDig可以通过JDBC、ODBC或者直接用Pl/pgSQL修改数据和属性。客户端可以是PC或者移动设备。 路径搜索引擎可以瞬间反映数据变化，不需要预先计算。 “cost”参数通过SQL动态计算，其数值可来自多个字段或表格 proj4 一个投影坐标变换库 Projected coordinate system 投影坐标系，简写为PROJCS。投影坐标系使用基于X,Y值的坐标系统来描述地球上某个点所处的位置。将某个地理坐标系（如WGS84）按一定的投影方法(如兰伯特投影，墨脱克投影)可生成投影坐标系。 Q QGIS (Quantum GIS)，一个属于OSGeo下的开源的用户界面友好、跨平台的GIS软件（桌面地理信息系统），可运行在Linux、Unix、Mac OS X和Windows等平台之上。 R Rasdaman Rasdaman 扩展了常规关系数据库的功能，针对存储和调用海量多维栅格数据实现了高效的服务器端优化，并使用 SQL 风格的查询语言。通过将数据存储在 PostgreSQL 数据库系统之中，Rasdaman 实现了高度的数据整合。 Rasdaman 是 GDAL（Geospatial Data Abstraction Library）函数库的一部分，同时也提供 Map Server 集成（beta 版）。 该系统支持 OGC WCS/WCPS 网络地理信息编录和 WPS 网络地理数据处理服务，并有 C++ / Java API 和自有的一套查询语言。 Rasdaman 系统成熟稳定，已有超过 10 年的应用历史。法国国家地理研究所使用该系统支持千万兆容量的航片数据库。在 2007 年 ACM Principles of Database Systems 会议上，栅格数据库系统专家 Rona Machlin 将其称为“此类系统中最完善的实例”。 Redis Redis是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。从2010年3月15日起，Redis的开发工作由VMware主持。从2013年5月开始，Redis的开发由Pivotal赞助。Redis可以用作缓存，加快程序的访问速度，改善用户体验。 RS (Remote Sense，遥感) Ruby Ruby，一种简单快捷的面向对象面向对象程序设计脚本语言，在20世纪90年代由日本人松本行弘(Yukihiro Matsumoto)开发，遵守GPL协议和Ruby License。它的灵感与特性来自于 Perl、Smalltalk、Eiffel、Ada以及 Lisp语言。由 Ruby 语言本身还发展出了JRuby（Java平台）、IronRuby（NET平台）等其他平台的 Ruby 语言替代品。 Ruby是一门能让书写的人感到快乐的语言，相比较于其他语言，Ruby显得更加人性化并且更加灵活。 Ruby On Rails Ruby on Rails 是一个可以使你开发、部署、维护 web 应用程序变得简单的框架。 S Shapefile Shapefile文件是描述空间数据的几何和属性特征的非拓扑实体矢量数据结构的一种格式，由ESRI公司开发。 SAR (Synthetic Aperture Radar,SAR)，合成孔径雷达是一种高分辨率成像雷达，可以在能见度极低的气象条件下得到类似光学照相的高分辨雷达图像。利用雷达与目标的相对运动把尺寸较小的真实天线孔径用数据处理的方法合成一较大的等效天线孔径的雷达，也称综合孔径雷达。合成孔径雷达的特点是分辨率高，能全天候工作，能有效地识别伪装和穿透掩盖物。所得到的高方位分辨力相当于一个大孔径天线所能提供的方位分辨力。合成孔径雷达的首次使用是在20世纪50 年代后期，装载在RB-47A和RB-57D 战略侦察飞机上。经过近60年的发展，合成孔径雷达技术已经比较成熟，各国都建立了自己的合成孔径雷达发展计划，各种新型体制合成孔径雷达应运而生，在民用与军用领域发挥重要作用。 SensorML (Sensor Model Language)传感器描述语言，该标准定义了一种模型和 XML 编码，用于实现对网络中传感器的发现和观测数据的获取。它让开发者定义模型与 XML 模板描述传感器的观测和后观测处理过程。 SLD (Style Layer Descriptor)图层样式注记，其为地图要素的标记样式提供指导。它常用于 Web Map Services 网络地图服务的渲染以及 GML（来自 WFS）的要素的样式处理。 SOS (Sensor Observation Service)传感器数据传输标准，该接口是一项数据服务标准。它定义了从各类传感器获取信息的接口与操作。它采用 Observation and Measurements (O&amp;M) 观测与测量数据标准格式提供结果，以 SensorML 标准描述传感器系统。 SpatiaLite SpatiaLite是SQLite数据的空间数据引擎。 SQLite是一个深受欢迎的数据库管理系统，具有简单、稳定、易于使用和真正的轻量级特点。 每个SQLite数据库是一个简单文件，用户可以自由复制、压缩，以及通过局域网LAN和广域网WEB毫不费力地传送。 数据库是扩平台的，同一个数据库文件可以在多种操作系统环境工作，如：Windows, Linux, MacOs等。 Spatial Reference 空间参考，在地理数据库中，坐标系和其他相关空间属性被定义为各数据集的空间参考的一部分。空间参考是用于存储各要素类和栅格数据集，以及其他坐标属性（例如，x,y 坐标的坐标分辨率及可选的 z 坐标和测量 (m) 坐标）的坐标系。 SPOT (Systeme Probatoire d’Observation de la Terre)SPOT系列卫星是法国空间研究中心（CNES）研制的一种地球观测卫星系统，至今已发射SPOT卫星1-7号。SPOT卫星的特点是分辨率非常高，最高可达1.5m。 surface 表面，在Geodatabase 中，地球表面可以使用TIN 来存储，其中高程值存储在栅格像元中；地球表面也可以使用等高线来表现。 T​​ TensorFlow TensorFlow是谷歌基于DistBelief进行研发的第二代人工智能学习系统，其命名来源于本身的运行原理。Tensor（张量）意味着N维数组，Flow（流）意味着基于数据流图的计算，TensorFlow为张量从流图的一端流动到另一端计算过程。TensorFlow是将复杂的数据结构传输至人工智能神经网中进行分析和处理过程的系统。 TensorFlow可被用于语音识别或图像识别等多项机器学习和深度学习领域，对2011年开发的深度学习基础架构DistBelief进行了各方面的改进，它可在小到一部智能手机、大到数千台数据中心服务器的各种设备上运行。TensorFlow将完全开源，任何人都可以用。 TIN (Triangulated Irregular Network)，不规则三角网，由Peuker和他的同事于1978年设计的一个系统，根据区域的有限个点集将区域划分为相连的三角面网络，数字高程由连续的三角面组成，三角面的形状和大小取决于不规则分布的测点的密度和位置，能够避免地形平坦时的数据冗余，又能按地形特征点表示数字高程特征。TIN常用来拟合连续分布现象的覆盖表面。 TopoJSON Topology 拓扑，拓扑存储地理对象之间的空间关系，可以通过指定拓扑规则来实现对现实世界的模拟，比如，在土地利用信息中，每一片土地都对应一种土地类型，地块之间不允许存在缝隙（gap），这样可以使用“Must Not Have Gap”的规则来管理土地利用数据 TypeScript TypeScript是一种由微软开发的自由和开源的编程语言。它是JavaScript的一个超集，而且本质上向这个语言添加了可选的静态类型和基于类的面向对象编程。 TypeScript扩展了JavaScript的语法，所以任何现有的JavaScript程序可以不加改变的在TypeScript下工作。TypeScript是为大型应用之开发而设计，而编译时它产生 JavaScript 以确保兼容性。 U Ubuntu Ubuntu（友帮拓、优般图、乌班图）是一个以桌面应用为主的开源GNU/Linux操作系统，Ubuntu 是基于Debian GNU/Linux，支持x86、amd64（即x64）和ppc架构，由全球化的专业开发团队（Canonical Ltd）打造的。 目前有许多的分支，主要有Xubuntu、Lubuntu、Kubuntu，分别采用Xfce、Lxde、KDE桌面系统，是Linux发行版中比较成熟好用的，目前最新版本为Ubuntu18.04（仿生海狸）。 UTM投影 (Universal Transverse Mercator Projection - 通用横轴墨卡托投影，又称横轴等角割圆柱投影)，该投影应用范围极广。 一种“等角横轴割圆柱投影”，椭圆柱割地球于南纬80度、北纬84度两条等高圈，投影后两条相割的经线上没有变形，而中央经线上长度比0.9996。UTM投影是为了全球战争需要创建的，美国于1948年完成这种通用投影系统的计算。与高斯-克吕格投影相似，该投影角度没有变形，中央经线为直线，且为投影的对称轴，中央经线的比例因子取0.9996是为了保证离中央经线左右约180km处有两条不失真的标准经线。 UTM投影分带方法与高斯-克吕格投影相似，将北纬84度至南纬80度之间按经度分为60个带,每带6度.从西经180度起算,两条标准经线距中央经线为180KM左右,中央经线比例系数为0.9996. 6度带和3度带的分界线为1:10000，大于1:10000对的地图采用3度带，小于此阈值的地图采用6度带。 V Vue.JS Vue.js（读音 /vjuː/, 类似于 view）是一个构建数据驱动的 web 界面的渐进式框架。Vue.js 的目标是通过尽可能简单的 API 实现响应的数据绑定和组合的视图组件。它不仅易于上手，还便于与第三方库或既有项目整合。 VGE (Virtual geographical environment)虚拟地理环境 VGI (Volunteered geographic information)志愿式（自发性）地理信息 W​​ WCS (Web Coverage Service)网络地理场数据服务，该口标准定义了一套标准接口和操作用于提供和获取可共用的网络地理场数据服务。“Grid coverages”栅格数据通常指卫星图片、数字航摄图片、数字高程模型及其它使用各个点的数值模型表达的信息。 WGS-84 (World Geodetic System-1984 Coordinate System)一种国际上采用的地心坐标系。坐标原点为地球质心，其地心空间直角坐标系的Z轴指向BIH （国际时间服务机构）1984.O定义的协议地球极（CTP)方向，X轴指向BIH 1984.0的零子午面和CTP赤道的交点，Y轴与Z轴、X轴垂直构成右手坐标系，称为1984年世界大地坐标系统。 WFS (Web Feature Service)网络地理要素服务，该接口定义了一套接口用于传输矢量地理要素数据，比如道路和湖泊等。 WMS (Web Map Service)网络地图服务，该接口标准是一套简单的 HTTP 接口，用于从一个或多个地理信息数据库传输有地理定位的地图图像数据。其返回为 JPEG、PNG、等地图数据，可用于网页或桌面客户端显示。 WMTS (Web Map Tile Service)切片地图网络服务，提供了一种采用预定义图块方法发布数字地图服务的标准化解决方案。WMTS弥补了WMS不能提供分块地图的不足。WMS针对提供可定制地图的服务，是一个动态数据或用户定制地图（需结合SLD标准）的理想解决办法。WMTS牺牲了提供定制地图的灵活性，代之以通过提供静态数据（基础地图）来增强伸缩性，这些静态数据的范围框和比例尺被限定在各个图块内。这些固定的图块集使得对WMTS服务的实现可以使用一个仅简单返回已有文件的Web服务器即可，同时使得可以利用一些标准的诸如分布式缓存的网络机制实现伸缩性。 WKT&amp;WKB Well-Known Text&amp;Well-Known Binary，两者为OpenGIS标准中的描述空间对象的标准方式。 WPS (Web Processing Service)网络地理信息处理服务，该标准为网络地理信息处理服务提供了标准化的输入和输出。 X XML (eXtensive Markup Language) 可拓展标记语言。在电子计算机中，标记指计算机所能理解的信息符号，通过此种标记，计算机之间可以处理包含各种的信息比如文章等。它可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 它非常适合万维网传输，提供统一的方法来描述和交换独立于应用程序或供应商的结构化数据。是Internet环境中跨平台的、依赖于内容的技术，也是当今处理分布式结构信息的有效工具。早在1998年，W3C就发布了XML1.0规范，使用它来简化Internet的文档信息传输。 Y YAML (YAML Ain’t Markup Language)YAML不是一种置标语言. YAML的语法和其他高阶语言类似，并且可以简单表达清单、散列表，标量等资料形态、。 它使用空白符号缩排和大量依赖外观的特色，特别适合用来表达或编辑数据结构、各种设定档、倾印除错内容、文件大纲（例如：许多电子邮件标题格式和YAML非常接近）。 尽管它比较适合用来表达阶层式（hierarchical model）的数据结构，不过也有精致的语法可以表示关联性（relational model）的资料。 由于YAML使用空白字符和分行来分隔资料，使的他特别适合用grep、Python、Perl、Ruby操作。 其让人最容易上手的特色是巧妙避开各种封闭符号，如：引号、各种括号等，这些符号在嵌套结构中会变得复杂而难以辨认。 Z 附录 - Appendix 1.核心的地理信息服务接口 2.核心的地理信息服务接口 服务种类 接口继承 主要接口 说明 WS(Web Service) GetCapabilities 服务能力的查询 WRS(Web Registry Service) WS RegisterService 注册服务信息描述 GetDescriptor WMS(Web Map Service) WS GetMap 获取地图 GetFeatureInfo Feature信息 WFS(Web Feature Service) WS GetFeature 获取Feature DescribeFeatureType Feature类型描述 WCS(Web Coverage Service) WS GetCoverage 获取Coverage SLD(Styled Layer Description) WMS DescribeLayer 图层样式 TWFS(Transaction WFS) WFS Transaction 事务服务 LockFeature Feature加锁 Geocoder WFS GeocoderFeature 地理编码 3.开源许可证 1)GNU GPL(GNU General Public License, GNU通用公共许可证) 只要软件中包含了遵循GPL协议的产品或者代码，该软件就必须遵循GPL许可协议并且**开源、免费**。（不适合商用软件） 开源软件使用广泛，例如Linux。 特点： 复制自由：允许把软件复制到任何人的电脑中，并且不限制复制的数量。 传播自由：允许软件以各种形式进行传播 收费自由：允许在各种媒介上出售该软件，但必须提前让买家知道这个软件是可以免费获得的；开源软件一般通过为用户提供有偿服务的形式盈利。 修改自由：允许开发人员增加或删除软件功能，修改后必须依然基于GPL许可协议授权。 2)LGPL 3)BSD(Berkeley Software Distribution，伯克利软件发布版)许可协议 用户可以使用、修改和重新发布遵循该许可的软件，并且可以将软件作为商业软件发布与销售。 但是商业化的前提有三点： 如果再发布的软件中包含源代码，则源代码必须继续遵循BSD许可协议。 如果再发布软件中只有二进制程序，则需要在相关文档或者版权文件中声明原始代码遵循BSD协议。 不允许使用原始软件的名字、作者名或者机构名称进行市场推广。 4)Apache许可证版本(Apache License Version)许可协议 在为开发人员提供版权以及专利许可的同时，允许用户拥有修改代码以及再发布的自由。 适用于商业软件。 开发时应遵守的条件： 该软件及其衍生品必须继续使用Apache许可协议。 如果修改了程序源代码，需要在文档中进行声明。 若软件是基于他人的源代码编写而成的，则需要保留原始代码的协议、商标、专利声明及其他原作者声明的内容信息。 如果再发布的软件中有声明文件，则需在此文件中标注Apache许可协议及其他许可协议。 5)MPL(Mozilla Public License，Moz://a公共许可)许可协议 相较于GPL许可协议，MPL更加注重对开发者的源代码需求和收益之间的平衡。 6)MIT(Massachusetts Institute of Technology)许可协议 限制最少 仅需在修改后的源代码中保留原作者的许可信息 商业软件使用普遍","categories":[{"name":"Others","slug":"Others","permalink":"http://Vezarachan.github.io/categories/Others/"}],"tags":[{"name":"wiki","slug":"wiki","permalink":"http://Vezarachan.github.io/tags/wiki/"}]},{"title":"JSON Learning -1-","slug":"JSON_Learing_1","date":"2018-05-13T16:00:00.000Z","updated":"2020-01-22T13:29:54.779Z","comments":true,"path":"2018/05/14/JSON_Learing_1/","link":"","permalink":"http://Vezarachan.github.io/2018/05/14/JSON_Learing_1/","excerpt":"什么是JSON 1.先给JSON下个定义 JSON(JavaScript Object Notation)——JavaScript对象表示法。 JSON是一种被多种系统用于交换数据的数据交换格式。 JSON独立于编程语言，和JavaScript有着一定的关系（来源于JavaScript的一个子集），它是基于JavaScript对象字面量表示法 JSON表达数据的方式对通用的编程概念很友好","text":"什么是JSON 1.先给JSON下个定义 JSON(JavaScript Object Notation)——JavaScript对象表示法。 JSON是一种被多种系统用于交换数据的数据交换格式。 JSON独立于编程语言，和JavaScript有着一定的关系（来源于JavaScript的一个子集），它是基于JavaScript对象字面量表示法 JSON表达数据的方式对通用的编程概念很友好 2.JSON的表示 JSON利用名称-值对（或者说是键值对）来描述一个具体的属性或者事物。 JSON利用双引号来将名称和值进行包裹，然后使用冒号分隔名称和值，如下图所示： 12\"animal\" : \"cat\"\"country\" : \"China\" 注：为了获得最大的可移植性，应该尽可能避免空格以及特殊字符。 但是，这还没有结束！ JSON的完整表示方法还需要花括号&quot;{ … }“的帮助，用它来包裹整个对象，还可能会用到方括号”[ … ]&quot;，用它来包裹数组，逗号&quot;,&quot;也很重要，用它来分隔对象中的名称-值对或者数组中的值。有如下示例： 123456789&#123; \"type\" : \"plankton\", \"color\" : \"green\", \"type\" : [ \"phytoplankton\", \"zooplankton\" ]&#125; 3.JSON的数据类型 对象 字符串 数字： 整型 浮点型 定点数 布尔值 null 数组 1)对象类型 /* 嵌套对象 */ 1234567891011121314&#123; \"person\" : &#123; \"name\" : \"Lindasy Bassett\", \"heightInInches\" : 66, \"head\" : &#123; \"hair\" : &#123; \"color\" : \"light blond\", \"length\" : \"short\", \"style\" : \"A-Line\" &#125;, \"eyes\" : \"green\" &#125; &#125;&#125; 2)字符串类型 下列字符需要进行转义 需要转义的字符 名称 &quot; 双引号 \\\\ 反斜线 / 正斜线 \\b 退格符 \\f 换页符 \\t 制表符 \\n 换行符 \\r 回车符 \\u 后面跟十六进制字符 3)数字类型 JSON中的数字可以是整数、小数、负数或者指数 123456&#123; \"INT\" : 225, \"DECIMAL\" : 22.555, \"NEGATIVE\" : -225.55, \"INDEX\" : 2.25e+25&#125; 4)布尔类型 JSON中的布尔类型字面值仅仅允许小写形式——true or false 1234&#123; \"haveKey\" : true, \"haveDoor\" : false&#125; 5)null类型 null是一个表示“没有值”的值，并且null必须小写 6)数组类型 数组中可以容纳不同类型的数值，但是不建议这么做，即使它在JavaScript中可行，但是在其他编程语言中可能不适用。 12345678910111213141516171819&#123; \"test\" : [ &#123; \"question\" : \"2X + Y = 5 and X + Y = 3\", \"answer\" : &#123; \"X\" : 2, \"Y\" : 1 &#125; &#125;, &#123; \"question\" : \"The SKY is blue\", \"answer\" : true &#125;, &#123; \"question\" : \"a cat looks like a dog.\", \"answer\" : false &#125; ]&#125; 多维数组 12345678910111213141516171819202122&#123; \"tests\" : [ [ true, false, false, true ], [ false, true, false, false ], [ false, true, true, true ] ]&#125;","categories":[{"name":"JSON","slug":"JSON","permalink":"http://Vezarachan.github.io/categories/JSON/"}],"tags":[{"name":"学习笔记","slug":"学习笔记","permalink":"http://Vezarachan.github.io/tags/学习笔记/"},{"name":"JSON","slug":"JSON","permalink":"http://Vezarachan.github.io/tags/JSON/"}]}]}